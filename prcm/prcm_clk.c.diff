--- linux-2.6.24/arch/arm/mach-omap3pe/prcm_clk.c	2010-06-29 20:17:28.000000000 -0300
+++ linux-2.6.24_sbromwich/arch/arm/mach-omap3pe/prcm_clk.c	2010-06-29 12:42:37.000000000 -0300
@@ -86,9 +86,10 @@
 			return PRCM_PASS;
 
 		udelay(5);
+		// cond_resched_softirq (); - fails
 	} while (retries--);
 
-	printk(KERN_INFO "Timeout in check_device_status(), deviceid %d, "
+	printk(KERN_INFO "Help me Obi Pre Kenobi... Timeout in check_device_status(), deviceid %d, "
 			"desired state %d, current state %d\n",
 			deviceid, control, curr_state);
 
@@ -150,7 +151,7 @@
 			/* FCLK/ICLK present and is ON
 			 * Wait for sometime for the clocks to stabilize*/
 			DPRINTK("Adding delay\n");
-			udelay(100);
+			cond_resched_softirq();
 			return PRCM_PASS;
 		}
 	}
@@ -264,8 +265,9 @@
 	enbit = DEV_BIT_POS(deviceid);
 	domain = DOMAIN_ID(deviceid);
 
-	if (cpu_is_omap3430() && !(omap & (AT_3430|AT_3430_ES2)))
+	if (cpu_is_omap3430() && !(omap & (AT_3430|AT_3430_ES2))) {
 		return PRCM_FAIL;
+	}
 
 	addr  = get_addr(domain, REG_AUTOIDLE);
 	valid = get_val_bits(domain, REG_AUTOIDLE);
@@ -342,7 +344,28 @@
 
 	FAIL_ON_INVALID_DOMAINID(domainid);
 
-	retries = 500;
+	if (domainid == DOM_PER) {
+		retries = 150;
+	} else {
+		retries = 500;
+	}
+	
+	do {
+		ret = prcm_is_clock_domain_active(domainid, &curr_state);
+		if (ret != PRCM_PASS)
+			return ret;
+
+		if (curr_state == desired_state)
+			return PRCM_PASS;
+		
+		if ((retries == 300) || (retries == 200) || (retries == 100)) {
+                        cond_resched_softirq ();
+                } else {
+		        udelay(1);
+                }
+	} while (retries--);
+	
+	retries = 5;
 	do {
 		ret = prcm_is_clock_domain_active(domainid, &curr_state);
 		if (ret != PRCM_PASS)
@@ -351,10 +374,12 @@
 		if (curr_state == desired_state)
 			return PRCM_PASS;
 
-		udelay(1);
+		cond_resched_softirq ();
+		
 	} while (retries--);
+	
 
-	printk(KERN_INFO "Timeout in %s(), "
+	printk(KERN_INFO "We seem to be made to suffer. It's our lot in life. PCCDS: Timeout in %s(), "
 			"domainid %d, desired state %d, current state %d\n",
 			__FUNCTION__, domainid, desired_state, curr_state);
 	return PRCM_FAIL;
